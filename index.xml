<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sacred Seed Studio</title>
    <link>https://www.sacredseedstudio.com/index.xml</link>
    <description>Recent content on Sacred Seed Studio</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 05 Aug 2017 03:10:00 -0400</lastBuildDate>
    <atom:link href="https://www.sacredseedstudio.com/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>One Year of Ludum Dare</title>
      <link>https://www.sacredseedstudio.com/blog/2017/08/05/one-year-of-ludum-dare</link>
      <pubDate>Sat, 05 Aug 2017 03:10:00 -0400</pubDate>
      
      <guid>https://www.sacredseedstudio.com/blog/2017/08/05/one-year-of-ludum-dare</guid>
      <description>&lt;p&gt;This past year, from August 2016-2017, I participated in each Ludum Dare! I worked on three jams, and my first compo! I&amp;rsquo;ve made 4 different games, two by myself and two with Joel! We also did Ludum Dare 32, our very first Ludum Dare jam in April 2015.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h2 id=&#34;ludum-dare-32-an-unconvential-weapon-plan-it-http-ludumdare-com-compo-ludum-dare-32-action-preview-uid-51130&#34;&gt;&lt;a href=&#34;http://ludumdare.com/compo/ludum-dare-32/?action=preview&amp;amp;uid=51130&#34;&gt;Ludum Dare 32 - An Unconvential Weapon - Plan.IT&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;&lt;img alt=&#34;Ideas are flowing&#34; src=&#34;https://www.sacredseedstudio.com/images/blog/one-year-of-ludum-dare/LD32.jpg&#34;&gt;&lt;/p&gt;

&lt;p&gt;We used assets from Kenney and an online planet generator for our graphics and we never actually finished the game itself. The idea was to collect resources from planets along the way to a Hackathon. And upon arriving to the hackathon, use the resources to build something and win! We finished the resource collecting mini game, but that&amp;rsquo;s as far as we got!&lt;/p&gt;

&lt;h2 id=&#34;ludum-dare-36-ancient-technology-choose-your-fate-http-ludumdare-com-compo-ludum-dare-36-action-preview-uid-113517&#34;&gt;&lt;a href=&#34;http://ludumdare.com/compo/ludum-dare-36/?action=preview&amp;amp;uid=113517&#34;&gt;Ludum Dare 36 - Ancient Technology - Choose Your Fate&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;&lt;img alt=&#34;Ideas are flowing&#34; src=&#34;https://www.sacredseedstudio.com/images/blog/one-year-of-ludum-dare/LD36.gif&#34;&gt;&lt;/p&gt;

&lt;p&gt;I forgot about Ludum Dare until Saturday night when I decided to start anyways! I worked by myself and I didn&amp;rsquo;t really have an idea. My main goal for this jam was to build an inventory system, and a dialogue system. I finished both! But then there was literally nothing else to do. I played around trying to build a cutscene at the beginning to [sort-of] have a story.&lt;/p&gt;

&lt;p&gt;The characters all had randomized names and personalities, which determined their dialogue options. At the beginning of each game, you could choose between two random characters. Spoiler alert, your choice had no effect!&lt;/p&gt;

&lt;p&gt;I didn&amp;rsquo;t have a playable game, but I did have a world where you could talk to snobby NPCs. But hey, don&amp;rsquo;t touch strange technology in the woods, it&amp;rsquo;s not my fault!&lt;/p&gt;

&lt;h2 id=&#34;ludum-dare-37-one-room-hacker-cafe-http-ludumdare-com-compo-ludum-dare-37-action-preview-uid-113517&#34;&gt;&lt;a href=&#34;http://ludumdare.com/compo/ludum-dare-37/?action=preview&amp;amp;uid=113517&#34;&gt;Ludum Dare 37 - One Room - Hacker Cafe&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;&lt;img alt=&#34;Ideas are flowing&#34; src=&#34;https://www.sacredseedstudio.com/images/blog/one-year-of-ludum-dare/LD37.gif&#34;&gt;&lt;/p&gt;

&lt;p&gt;Joel and I worked together on this game, and we actually finished! Our first complete Ludum Dare game! We took a lot of inspiration from Reigns, and had definitely been watching a lot of Mr.Robot&amp;hellip; We were very happy with the final outcome, it&amp;rsquo;s still a potential game that we might work on again. We completed the things we had hoped to; which were, a notification system, and loading in the story line/options with json and scriptable objects.&lt;/p&gt;

&lt;p&gt;This was the first game that we made where we used our own graphics. We also used Google material icons. We tried not to let our lack of artistic ability stop us from making our own game! We didn&amp;rsquo;t have enough content, because we ran out of time to create more. The notifications get reptative fairly quickly, so that needed to be deepened quite a bit. The feedback we got on this game was really great, a lot of people really liked it.&lt;/p&gt;

&lt;h2 id=&#34;ludum-dare-38-a-small-world-village-builder-https-ldjam-com-events-ludum-dare-38-the-tiny-village&#34;&gt;&lt;a href=&#34;https://ldjam.com/events/ludum-dare/38/the-tiny-village&#34;&gt;Ludum Dare 38 - A Small World - Village Builder&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;&lt;img alt=&#34;Ideas are flowing&#34; src=&#34;https://www.sacredseedstudio.com/images/blog/one-year-of-ludum-dare/LD38.gif&#34;&gt;&lt;/p&gt;

&lt;p&gt;Yay, new Ludum Dare website! This was a mostly finished, but not finished, entry. Our goal was to create a small world builder. A small sandbox to design a village and see what your rank was. We used Kenney assets again but we had a limited amount of things. We used what we had, and I worked on my UI skills. I generated an isometric grid of grass, and trees around the edges, the player had a set amount of money to build the village, but in the end I just gave the player way more money than they would ever need :) Just for fun!&lt;/p&gt;

&lt;p&gt;We were really busy that weekend so we didn&amp;rsquo;t have a lot of time to work on the game, so part way through we cut our scope. Originally, the goal was to keep your village thriving over many days, and slowly build it up and make money etc. But we didn&amp;rsquo;t have the time to build those systems, so we changed the idea to just build a village in one go :) It all worked out.&lt;/p&gt;

&lt;h2 id=&#34;ludum-dare-39-running-out-of-power-power-tripping-https-ldjam-com-events-ludum-dare-39-power-tripping-keeping-it-cool&#34;&gt;&lt;a href=&#34;https://ldjam.com/events/ludum-dare/39/power-tripping-keeping-it-cool&#34;&gt;Ludum Dare 39 - Running out of Power - Power Tripping&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;&lt;img alt=&#34;Ideas are flowing&#34; src=&#34;https://www.sacredseedstudio.com/images/blog/one-year-of-ludum-dare/LD39.gif&#34;&gt;&lt;/p&gt;

&lt;p&gt;My very first compo! Timing was different this time around, with only two days to build. I started Friday night at midnight after deciding not to participate, until I read the theme and instantly had an idea. The best ideas always happen once you&amp;rsquo;ve decided not to join in. It was pretty late, so naturally I stayed up until 6 getting things started. The bulk of the game was finished in the first hours, all the graphics and base scripting. I added UI Saturday before going to a party :P&lt;/p&gt;

&lt;p&gt;I spent Sunday finishing the UI and adding smaller details, and finishing the game play. I saved the last 6 hours for making music. This was my first time actually making any music for a game, or anything really. I used Bosca Ceoil, and I love it! I actually finished my game 2 hours before the deadline. But it took me almost 3 hours to get my build, my source and my Ludum Dare submission ready. The servers went down just minutes before I tried to submit my game, so I had to wait until later in the night to actually complete the submission.&lt;/p&gt;

&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;So with Ludum Dare 39, I&amp;rsquo;ve completed one whole years worth of Ludum Dare. And it feels great, I love getting feedback on my games, and I love seeing what the rest of the community has built. It&amp;rsquo;s great to see the different ways the theme is interpreted, and there are always lots of top notch games. The community is really nice, and very supportive whether you&amp;rsquo;re on your first jam or your 10th! Some days it&amp;rsquo;s difficult to see the progress I&amp;rsquo;ve made, but looking at all four of the games at the same time really brings it out.&lt;/p&gt;

&lt;p&gt;I can&amp;rsquo;t wait to keep participating in Ludum Dare, Global Game jams and any other game jams I find :)&lt;br /&gt;
Don&amp;rsquo;t forget to keep creating!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Interacting with JSON in Unity</title>
      <link>https://www.sacredseedstudio.com/tutorials/interacting-with-json-in-unity/</link>
      <pubDate>Sat, 10 Jun 2017 13:27:39 -0300</pubDate>
      
      <guid>https://www.sacredseedstudio.com/tutorials/interacting-with-json-in-unity/</guid>
      <description>&lt;p&gt;Oftentimes we find ourselves working with JSON data. Whether it&amp;rsquo;s communicating with a web server or importing and exporting data. Before in Unity the solutions were you had to write your own parser/serializer, or get a third party plugin. Semi-recently the JsonUtility class was introduced in the UnityEngine namespace. It won&amp;rsquo;t solve all of your problems, but it is a great built in tool. This tutorial builds a simple example to demonstrate handling JSON.
&lt;/p&gt;

&lt;p&gt;The focus is on the data found on &lt;a href=&#34;https://jsonplaceholder.typicode.com&#34;&gt;https://jsonplaceholder.typicode.com&lt;/a&gt; this allows us to use a live server and have a real world use case. If this server ever goes down you can use the &lt;a href=&#34;https://github.com/Sacred-Seed-Studio/tutorials/tree/master/interacting-with-json-in-unity/Assets/Data&#34;&gt;backup data&lt;/a&gt;. This is by no means a tutorial about web request best practices in Unity, but does show a real world use case for JSON.&lt;/p&gt;

&lt;p class=&#34;note&#34;&gt;This is a git friendly tutorial. You can follow the steps by clicking the commit link in the header. You can see the &lt;a href=&#34;https://github.com/Sacred-Seed-Studio/tutorials/tree/master/interacting-with-json-in-unity&#34;&gt;completed project here.&lt;/a&gt; Darker screenshots are in Play mode.&lt;/p&gt;
  

&lt;h3 id=&#34;setup&#34;&gt;Setup&lt;/h3&gt;

&lt;h4 id=&#34;unity-a545ebe-https-github-com-sacred-seed-studio-tutorials-commit-a545ebe0aa3c840e5f1df5253eaa0eae93187d6c&#34;&gt;Unity &lt;a href=&#34;https://github.com/Sacred-Seed-Studio/tutorials/commit/a545ebe0aa3c840e5f1df5253eaa0eae93187d6c&#34;&gt;a545ebe&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;Setup a new unity project or open an existing one.&lt;/p&gt;

&lt;h4 id=&#34;data-structures-c1e22b3-https-github-com-sacred-seed-studio-tutorials-commit-c1e22b33ae55feea013457a572f4264bcc72e76c&#34;&gt;Data Structures &lt;a href=&#34;https://github.com/Sacred-Seed-Studio/tutorials/commit/c1e22b33ae55feea013457a572f4264bcc72e76c&#34;&gt;c1e22b3&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;To start we will create two data structures to match a Post and User. You can check out their json response at the urls below:&lt;br /&gt;
&lt;a href=&#34;https://jsonplaceholder.typicode.com/users/1&#34;&gt;https://jsonplaceholder.typicode.com/users/1&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;https://jsonplaceholder.typicode.com/posts/1&#34;&gt;https://jsonplaceholder.typicode.com/posts/1&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Structs are used for simplicity, but this could be a class with a constructor and ToString override.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-c#&#34; data-lang=&#34;c#&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// Assets/DataStructures/Post.cs&lt;/span&gt;
&lt;span class=&#34;na&#34;&gt;[System.Serializable]&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Post&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;userId&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;body&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;// Assets/DataStructures/User.cs&lt;/span&gt;
&lt;span class=&#34;na&#34;&gt;[System.Serializable]&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;GeoCoords&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;float&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;lat&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;float&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;lng&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;na&#34;&gt;[System.Serializable]&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Address&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;street&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;suite&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;city&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;zipcode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;GeoCoords&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;geo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;na&#34;&gt;[System.Serializable]&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Company&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;catchPhrase&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;bs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;na&#34;&gt;[System.Serializable]&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;User&lt;/span&gt; 
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;email&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Address&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;address&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;phone&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;website&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Company&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;company&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&#34;api-f7a01a2-https-github-com-sacred-seed-studio-tutorials-commit-f7a01a275a5666744b5754b525bed8a3634190a4&#34;&gt;API &lt;a href=&#34;https://github.com/Sacred-Seed-Studio/tutorials/commit/f7a01a275a5666744b5754b525bed8a3634190a4&#34;&gt;f7a01a2&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;Next, create an API class. Used to store the base url of the server; this will help prevent typos and other weird bugs in the code.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-c#&#34; data-lang=&#34;c#&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// Assets/API/API.cs&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;API&lt;/span&gt; 
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;baseURL&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;https://jsonplaceholder.typicode.com&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&#34;simple-example-019ba2f-https-github-com-sacred-seed-studio-tutorials-commit-019ba2fdb8a289dc88bf678110d63ee452da241f&#34;&gt;Simple Example &lt;a href=&#34;https://github.com/Sacred-Seed-Studio/tutorials/commit/019ba2fdb8a289dc88bf678110d63ee452da241f&#34;&gt;019ba2f&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;For a simple example, make a new C# MonoBehaviour and attach it to an empty game object.
This script will make a GET request to fetch a post and a user. These requests can later be customized.&lt;/p&gt;

&lt;p&gt;The following are used:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.unity3d.com/ScriptReference/WWW.html&#34;&gt;WWW&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.unity3d.com/ScriptReference/JsonUtility.html&#34;&gt;JsonUtility&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.unity3d.com/Manual/Coroutines.html&#34;&gt;Coroutines&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-c#&#34; data-lang=&#34;c#&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// Assets/SimpleExample/SimpleExample.cs&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;System.Collections&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;UnityEngine&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;SimpleExample&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;MonoBehaviour&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;User&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Post&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;post&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Start&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;StartCoroutine&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;LoadPost&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;());&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;StartCoroutine&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;LoadUser&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;());&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;n&#34;&gt;IEnumerator&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;LoadPost&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;WWW&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;www&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;WWW&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;API&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;baseURL&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;/posts/1&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;yield&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;www&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;post&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;JsonUtility&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;FromJson&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Post&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;www&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;Debug&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;Post: &amp;quot;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;www&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;n&#34;&gt;IEnumerator&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;LoadUser&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;WWW&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;www&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;WWW&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;API&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;baseURL&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;/users/1&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;yield&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;www&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;user&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;JsonUtility&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;FromJson&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;User&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;www&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;Debug&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;User: &amp;quot;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;www&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img alt=&#34;Simple Example Unity Screenshot&#34; src=&#34;https://www.sacredseedstudio.com/images/tutorials/interacting-with-json-in-unity/SimpleExample.png&#34;&gt;&lt;/p&gt;

&lt;p&gt;Start both example &lt;code&gt;Coroutines&lt;/code&gt; in Unity&amp;rsquo;s Start method and wach the new data appear in the inspector upon the web request completion. Pretty neat, and refreshingly simple. You could use &lt;code&gt;JsonUtility&lt;/code&gt; synchronously with any string in place of www.text as well.&lt;/p&gt;

&lt;h3 id=&#34;handling-arrays-44a5c7e-https-github-com-sacred-seed-studio-tutorials-commit-44a5c7efd617c835f2d07c5b233132c4d43b79b2&#34;&gt;Handling Arrays &lt;a href=&#34;https://github.com/Sacred-Seed-Studio/tutorials/commit/44a5c7efd617c835f2d07c5b233132c4d43b79b2&#34;&gt;44a5c7e&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;In this second part we will deal with JSON arrays. The astute Googler will have realized that &lt;code&gt;JsonUtility&lt;/code&gt; doesn&amp;rsquo;t support top level json arrays. However this can be worked around. Create a new class &lt;code&gt;JsonHelper&lt;/code&gt; which will provide a static generic function that returns an array. This wraps the json array in a new private generic object &lt;code&gt;JsonArrayWrapper&lt;/code&gt;. This is based off of &lt;a href=&#34;https://forum.unity3d.com/threads/how-to-load-an-array-with-jsonutility.375735/#post-2585129&#34;&gt;a post on the unity forums&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img alt=&#34;Handling Arrays Unity Screenshot&#34; src=&#34;https://www.sacredseedstudio.com/images/tutorials/interacting-with-json-in-unity/HandlingArrays.png&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-c#&#34; data-lang=&#34;c#&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// Assets/HandlingArrays/JsonHelper.cs&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;UnityEngine&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;JsonHelper&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;getJsonArray&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;json&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;newJson&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;{ \&amp;quot;array\&amp;quot;: &amp;quot;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;json&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;}&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;JSONArrayWrapper&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;wrapper&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;JsonUtility&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;FromJson&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;JSONArrayWrapper&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;newJson&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;wrapper&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;na&#34;&gt;    [System.Serializable]&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;JSONArrayWrapper&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Actual usage is quite similar to JsonUtility:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-c#&#34; data-lang=&#34;c#&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// Assets/HandlingArrays/HandlingArrays.cs&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;UnityEngine&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;System.Collections&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;HandlingArrays&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;MonoBehaviour&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;User&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;users&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Start&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;StartCoroutine&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;LoadUsers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;());&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;n&#34;&gt;IEnumerator&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;LoadUsers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;WWW&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;www&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;WWW&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;API&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;baseURL&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;/users&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;yield&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;www&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;users&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;JsonHelper&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getJsonArray&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;User&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;www&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;Debug&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;Users: &amp;quot;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;www&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&#34;exporting-data-e98b737-https-github-com-sacred-seed-studio-tutorials-commit-e98b737b053ec4a16ee61cd4eee97d87359adab0&#34;&gt;Exporting Data &lt;a href=&#34;https://github.com/Sacred-Seed-Studio/tutorials/commit/e98b737b053ec4a16ee61cd4eee97d87359adab0&#34;&gt;e98b737&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Finally, to showcase how to turn raw data into JSON. We will make a POST request to the server simulating creation of a post. This part will vary depending on the format your server expects. Next send a request to &lt;a href=&#34;https://jsonplaceholder.typicode.com/posts&#34;&gt;https://jsonplaceholder.typicode.com/posts&lt;/a&gt; with a byte array containing the JSON version of our struct.&lt;/p&gt;

&lt;p&gt;Let the server know we are sending it JSON via the Content-Type header with the json mime type. When the request finishes, the id in the inspector changes.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-c#&#34; data-lang=&#34;c#&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// Assets/ExportingData/ExportingData.cs&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;UnityEngine&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;System.Collections&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;System.Collections.Generic&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;System.Text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;ExportingData&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;MonoBehaviour&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Post&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;post&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Start&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;StartCoroutine&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;CreatePost&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;());&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;n&#34;&gt;IEnumerator&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;CreatePost&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;Dictionary&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;headers&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Dictionary&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;();&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;headers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Add&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;Content-Type&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;application/json&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

        &lt;span class=&#34;kt&#34;&gt;byte&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;postData&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Encoding&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ASCII&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;GetBytes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;JsonUtility&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ToJson&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;post&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;

        &lt;span class=&#34;n&#34;&gt;WWW&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;www&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;WWW&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;API&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;baseURL&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;/posts&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;postData&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;headers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

        &lt;span class=&#34;k&#34;&gt;yield&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;www&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

        &lt;span class=&#34;n&#34;&gt;Debug&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;Created a Post: &amp;quot;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;www&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;post&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;JsonUtility&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;FromJson&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Post&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;www&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img alt=&#34;Exporting Data Unity Screenshot&#34; src=&#34;https://www.sacredseedstudio.com/images/tutorials/interacting-with-json-in-unity/ExportingData.png&#34;&gt;&lt;/p&gt;

&lt;h3 id=&#34;bonus-tests-45d9558-https-github-com-sacred-seed-studio-tutorials-commit-45d9558c4d7c4ca9339550172908e245d02c1a68&#34;&gt;Bonus: Tests &lt;a href=&#34;https://github.com/Sacred-Seed-Studio/tutorials/commit/45d9558c4d7c4ca9339550172908e245d02c1a68&#34;&gt;45d9558&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Its always good practice to write tests for your code. As we added our own custom JsonHelper we should write tests for it. This tutorial is about interacting with JSON so we won&amp;rsquo;t get into the specifics here. However, you can peruse the commit above and check out the &lt;a href=&#34;https://docs.unity3d.com/Manual/testing-editortestsrunner.html&#34;&gt;Unity Documentation&lt;/a&gt;, Happy coding!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Eternigolf</title>
      <link>https://www.sacredseedstudio.com/games/eternigolf/</link>
      <pubDate>Sun, 15 Jan 2017 16:36:04 -0400</pubDate>
      
      <guid>https://www.sacredseedstudio.com/games/eternigolf/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Relaunching the Website</title>
      <link>https://www.sacredseedstudio.com/blog/2017/01/15/relaunching-the-website</link>
      <pubDate>Sun, 15 Jan 2017 12:28:58 -0400</pubDate>
      
      <guid>https://www.sacredseedstudio.com/blog/2017/01/15/relaunching-the-website</guid>
      <description>&lt;p&gt;Over the past ~month the website has seen some enhancements, but today the biggest of all. We switched from &lt;a href=&#34;http://jekyllrb.com/&#34;&gt;Jekyll&lt;/a&gt; to &lt;a href=&#34;http://gohugo.io/&#34;&gt;Hugo&lt;/a&gt; as our static site generator.&lt;/p&gt;

&lt;p&gt;While Jekyll may be more mature it turned out to be difficult to tune it to exactly how we wanted. Our Tutorials are now separate from our blog. This was a big struggle point with Jekyll and it seems Hugo was built with that in mind. Some other improvements: We added a gallery, improved our games page, created a new logo, and added https support. The site is much easier to maintain now with continuous deployment from CircleCI. This went quite well and makes the website ready for an awesome 2017! We definitely recommend Hugo and the switch from Jekyll wasn&amp;rsquo;t too bad.&lt;/p&gt;

&lt;p&gt;If you are interested in how this website was built, please checkout it&amp;rsquo;s &lt;a href=&#34;https://github.com/Sacred-Seed-Studio/Sacred-Seed-Studio.github.io&#34;&gt;repository here&lt;/a&gt;. I have tagged the final state of the Jekyll site and the initial working state of the hugo site under the &lt;a href=&#34;https://github.com/Sacred-Seed-Studio/Sacred-Seed-Studio.github.io/releases&#34;&gt;Releases page&lt;/a&gt;. If you have any questions feel free to let us know!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>00010</title>
      <link>https://www.sacredseedstudio.com/gallery/00010/</link>
      <pubDate>Sat, 14 Jan 2017 15:18:55 -0400</pubDate>
      
      <guid>https://www.sacredseedstudio.com/gallery/00010/</guid>
      <description>&lt;iframe src=&#34;//giphy.com/embed/26gsf9Qh0xPdAUtuE?html5=true&#34;
        width=&#34;480&#34;
        height=&#34;340&#34;
        frameBorder=&#34;0&#34;
        class=&#34;giphy-embed&#34;
        allowFullScreen
&gt;
&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>00009</title>
      <link>https://www.sacredseedstudio.com/gallery/00009/</link>
      <pubDate>Sat, 14 Jan 2017 15:18:49 -0400</pubDate>
      
      <guid>https://www.sacredseedstudio.com/gallery/00009/</guid>
      <description>&lt;iframe src=&#34;//giphy.com/embed/26gsoximACrcu2X04?html5=true&#34;
        width=&#34;480&#34;
        height=&#34;340&#34;
        frameBorder=&#34;0&#34;
        class=&#34;giphy-embed&#34;
        allowFullScreen
&gt;
&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>00008</title>
      <link>https://www.sacredseedstudio.com/gallery/00008/</link>
      <pubDate>Sat, 14 Jan 2017 15:18:47 -0400</pubDate>
      
      <guid>https://www.sacredseedstudio.com/gallery/00008/</guid>
      <description>&lt;iframe src=&#34;//giphy.com/embed/l3q2XptU5f82S6rWo?html5=true&#34;
        width=&#34;480&#34;
        height=&#34;340&#34;
        frameBorder=&#34;0&#34;
        class=&#34;giphy-embed&#34;
        allowFullScreen
&gt;
&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>00007</title>
      <link>https://www.sacredseedstudio.com/gallery/00007/</link>
      <pubDate>Sat, 14 Jan 2017 15:18:45 -0400</pubDate>
      
      <guid>https://www.sacredseedstudio.com/gallery/00007/</guid>
      <description>&lt;iframe src=&#34;//giphy.com/embed/26xBv7OJzOYFXEmm4?html5=true&#34;
        width=&#34;480&#34;
        height=&#34;340&#34;
        frameBorder=&#34;0&#34;
        class=&#34;giphy-embed&#34;
        allowFullScreen
&gt;
&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>00006</title>
      <link>https://www.sacredseedstudio.com/gallery/00006/</link>
      <pubDate>Sat, 14 Jan 2017 15:18:43 -0400</pubDate>
      
      <guid>https://www.sacredseedstudio.com/gallery/00006/</guid>
      <description>&lt;iframe src=&#34;//giphy.com/embed/l3q2J8nFKsKwDrfYA?html5=true&#34;
        width=&#34;480&#34;
        height=&#34;340&#34;
        frameBorder=&#34;0&#34;
        class=&#34;giphy-embed&#34;
        allowFullScreen
&gt;
&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>00005</title>
      <link>https://www.sacredseedstudio.com/gallery/00005/</link>
      <pubDate>Sat, 14 Jan 2017 15:18:40 -0400</pubDate>
      
      <guid>https://www.sacredseedstudio.com/gallery/00005/</guid>
      <description>&lt;iframe src=&#34;//giphy.com/embed/26xBEBkuiaFrMfGow?html5=true&#34;
        width=&#34;480&#34;
        height=&#34;340&#34;
        frameBorder=&#34;0&#34;
        class=&#34;giphy-embed&#34;
        allowFullScreen
&gt;&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>00004</title>
      <link>https://www.sacredseedstudio.com/gallery/00004/</link>
      <pubDate>Sat, 14 Jan 2017 15:18:39 -0400</pubDate>
      
      <guid>https://www.sacredseedstudio.com/gallery/00004/</guid>
      <description>&lt;iframe src=&#34;//giphy.com/embed/26xBA5L7x5AdngOPe?html5=true&#34;
        width=&#34;480&#34;
        height=&#34;340&#34;
        frameBorder=&#34;0&#34;
        class=&#34;giphy-embed&#34;
        allowFullScreen
&gt;
&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>00003</title>
      <link>https://www.sacredseedstudio.com/gallery/00003/</link>
      <pubDate>Sat, 14 Jan 2017 15:18:37 -0400</pubDate>
      
      <guid>https://www.sacredseedstudio.com/gallery/00003/</guid>
      <description>&lt;iframe src=&#34;//giphy.com/embed/26gslGMLviri4n0sM?html5=true&#34;
        width=&#34;480&#34;
        height=&#34;340&#34;
        frameBorder=&#34;0&#34;
        class=&#34;giphy-embed&#34;
        allowFullScreen
&gt;
&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>00002</title>
      <link>https://www.sacredseedstudio.com/gallery/00002/</link>
      <pubDate>Sat, 14 Jan 2017 15:18:35 -0400</pubDate>
      
      <guid>https://www.sacredseedstudio.com/gallery/00002/</guid>
      <description>&lt;iframe src=&#34;//giphy.com/embed/l0Ex4ryMprAChLNg4?html5=true&#34;
        width=&#34;480&#34;
        height=&#34;340&#34;
        frameBorder=&#34;0&#34;
        class=&#34;giphy-embed&#34;
        allowFullScreen
&gt;
&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>00001</title>
      <link>https://www.sacredseedstudio.com/gallery/00001/</link>
      <pubDate>Sat, 14 Jan 2017 15:14:12 -0400</pubDate>
      
      <guid>https://www.sacredseedstudio.com/gallery/00001/</guid>
      <description>&lt;iframe src=&#34;//giphy.com/embed/l3q2V5gWvjuSHkdPy?html5=true&#34;
        width=&#34;480&#34;
        height=&#34;340&#34;
        frameBorder=&#34;0&#34;
        class=&#34;giphy-embed&#34;
        allowFullScreen
&gt;
&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>Ludum Dare</title>
      <link>https://www.sacredseedstudio.com/games/ludum-dare/</link>
      <pubDate>Sun, 11 Dec 2016 16:36:47 -0400</pubDate>
      
      <guid>https://www.sacredseedstudio.com/games/ludum-dare/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;http://ludumdare.com/compo/&#34;&gt;Ludum Dare&lt;/a&gt; is the longest running recurring game jam. We always enjoy entering these!&lt;/p&gt;

&lt;h2 id=&#34;37-http-ludumdare-com-compo-ludum-dare-37-action-preview-uid-113517-hacker-café&#34;&gt;#&lt;a href=&#34;http://ludumdare.com/compo/ludum-dare-37/?action=preview&amp;amp;uid=113517&#34;&gt;37&lt;/a&gt; Hacker Café&lt;/h2&gt;

&lt;p&gt;Welcome to the Hacker Café, the only room you&amp;rsquo;ll ever need to spend time in again!&lt;/p&gt;

&lt;p&gt;At the Hacker Café, you use their computers, and the security is a little lacking to say the least. You&amp;rsquo;ll be bombarded with pings from questionable sources. It&amp;rsquo;s up to you to decide how (and IF) you want to respond.&lt;/p&gt;

&lt;p&gt;Making decisions will affect your bitcoin, hacker rep (white hat vs black hat), software and hardware. Keep everything in balance to stay alive, make it to the top and most importantly, get that 1337 status.&lt;/p&gt;

&lt;p&gt;How long will you survive?&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.sacredseedstudio.com/LudumDare37/&#34;&gt;
    &lt;img alt=&#34;Ludum Dare 37 Screenshot&#34; src=&#34;https://www.sacredseedstudio.com/images/games/ludum-dare/ludumdare37title.png&#34;&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;36-http-ludumdare-com-compo-ludum-dare-36-action-preview-uid-113517-choose-your-fate&#34;&gt;#&lt;a href=&#34;http://ludumdare.com/compo/ludum-dare-36/?action=preview&amp;amp;uid=113517&#34;&gt;36&lt;/a&gt; Choose your Fate&lt;/h2&gt;

&lt;p&gt;You touch some strange technology in the woods and can&amp;rsquo;t seem to make it past the day&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.sacredseedstudio.com/LudumDare36/&#34;&gt;
    &lt;img alt=&#34;Ludum Dare 36 Screenshot&#34; src=&#34;https://www.sacredseedstudio.com/images/games/ludum-dare/ludumdare36title.gif&#34;&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;32-http-ludumdare-com-compo-ludum-dare-32-action-preview-uid-51130-plan-it&#34;&gt;#&lt;a href=&#34;http://ludumdare.com/compo/ludum-dare-32/?action=preview&amp;amp;uid=51130&#34;&gt;32&lt;/a&gt; Plan.IT&lt;/h2&gt;

&lt;p&gt;Plan.IT The largest and longest running interplanetary hackathon in the Milky Way. Collect resources to build a solution to hack the other contestants planets, all while defending your own. Will you succeed?&lt;/p&gt;

&lt;p&gt;&lt;img alt=&#34;Ludum Dare 32 Screenshot&#34; src=&#34;https://www.sacredseedstudio.com/images/games/ludum-dare/ludumdare32title.jpg&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>